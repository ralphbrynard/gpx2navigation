name: Test and Create PR

on:
  push:
    branches:
      - 'feature/**'
      - 'bugfix/**'
      - 'request/**'
      - 'support/**'
  pull_request:
    branches:
      - qa

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    
    - name: Create config directory
      run: mkdir -p ~/.gpx2navigation

    - name: Write config file
      run: |
        echo '{
          "client_id": "${{ secrets.CLIENT_ID }}",
          "client_secret": "${{ secrets.CLIENT_SECRET }}",
          "refresh_token": "${{ secrets.REFRESH_TOKEN }}"
        }' > ~/.gpx2navigation/config.json

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests openai

    - name: Install GitHub CLI
      run: |
        sudo apt update
        sudo apt install -y curl
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh

    - name: Authenticate GitHub CLI
      run: |
        echo "${{ secrets.GH_PAT }}" | gh auth login --with-token

    - name: Run tests and capture output
      id: run-tests
      run: |
        set -o pipefail
        python test_download_routes.py 2>&1 | tee test-output.log

    - name: Analyze test failures with OpenAI
      if: failure()
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_REF: ${{ github.ref }}
      run: |
        TEST_OUTPUT=$(cat test-output.log)
        PROMPT="Please analyze the following test output and provide a human-readable explanation of the errors along with suggested code changes. The relevant Python script is available here: https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/main/download_routes.py\n\nTest output:\n\n${TEST_OUTPUT}"
        RESPONSE=$(curl -s -X POST https://api.openai.com/v1/completions \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${OPENAI_API_KEY}" \
          -d '{
            "model": "text-davinci-003",
            "prompt": "'"${PROMPT}"'",
            "max_tokens": 1500
          }')

        RESPONSE_TEXT=$(echo "${RESPONSE}" | jq -r '.choices[0].text')
        echo "${RESPONSE_TEXT}" > openai_response.txt

        # Update download_routes.py with suggestions
        echo "${RESPONSE_TEXT}" >> download_routes.py

        # Commit the changes
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add download_routes.py openai_response.txt
        git commit -m "Test failure analysis and suggestions from OpenAI"

        # Push the changes
        git push origin HEAD

    - name: Rerun tests with debugging if first failure
      if: failure() && steps.run-tests.outcome == 'failure'
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_REF: ${{ github.ref }}
      run: |
        set -o pipefail
        python -m debugpy --wait-for-client --listen 5678 test_download_routes.py 2>&1 | tee test-output-debug.log

    - name: Analyze second test failure with OpenAI
      if: failure() && steps.run-tests.outcome == 'failure'
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_REF: ${{ github.ref }}
      run: |
        TEST_OUTPUT=$(cat test-output-debug.log)
        PROMPT="The previous test failed even after applying suggested changes. Please analyze the following test output and provide a human-readable explanation of the errors along with suggested code changes. The relevant Python script is available here: https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/main/download_routes.py\n\nTest output:\n\n${TEST_OUTPUT}"
        RESPONSE=$(curl -s -X POST https://api.openai.com/v1/completions \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${OPENAI_API_KEY}" \
          -d '{
            "model": "text-davinci-003",
            "prompt": "'"${PROMPT}"'",
            "max_tokens": 1500
          }')

        RESPONSE_TEXT=$(echo "${RESPONSE}" | jq -r '.choices[0].text')
        echo "${RESPONSE_TEXT}" > openai_response.txt

        # Add comment to the PR with formatted OpenAI output
        PR_NUMBER=$(gh pr view --json number --jq '.number')
        gh pr comment $PR_NUMBER --body "### 🤖 OpenAI Analysis 🤖\n\n\`\`\`\n${RESPONSE_TEXT}\n\`\`\`"

        # Fail the job
        exit 1

    - name: Merge PR to QA branch
      if: success() && github.event_name == 'pull_request' && github.base_ref == 'qa'
      run: |
        gh pr merge ${{ github.event.pull_request.number }} --merge --auto --message "Automated merge after successful tests."

    - name: Create PR to dev branch
      if: success() && github.event_name == 'pull_request' && github.base_ref == 'qa'
      env:
        GITHUB_SHA: ${{ github.sha }}
      run: |
        PR_TITLE="Merge QA changes into dev"
        PR_BODY="This pull request merges the changes from the QA branch into the dev branch.\n\n### Changes Merged from QA\n\`\`\`diff\n$(git diff qa..${GITHUB_SHA})\n\`\`\`\n\n### 🤖 OpenAI Analysis 🤖\n$(cat openai_response.txt)"
        gh pr create --title "${PR_TITLE}" --body "${PR_BODY}" --base dev --head qa

        # Add comment to the PR with formatted OpenAI output
        PR_NUMBER=$(gh pr view --json number --jq '.number')
        gh pr comment $PR_NUMBER --body "### 🤖 OpenAI Analysis 🤖\n\n\`\`\`\n$(cat openai_response.txt)\n\`\`\`"
