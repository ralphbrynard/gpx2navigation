name: Test and Create PR

on:
  pull_request:
    branches:
      - main
      - dev
      - qa
  push:
    branches:
      - 'feature/**'
      - 'bugfix/**'
      - 'request/**'
      - 'support/**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests openai

    - name: Install GitHub CLI
      run: |
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
        sudo apt-add-repository https://cli.github.com/packages
        sudo apt update
        sudo apt install gh

    - name: Authenticate GitHub CLI
      run: |
        echo "${{ secrets.GH_PAT }}" | gh auth login --with-token

    - name: Run tests and capture output
      id: run-tests
      run: |
        set -o pipefail
        python test_download_routes.py 2>&1 | tee test-output.log

    - name: Analyze test failures with OpenAI
      if: failure()
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_REF: ${{ github.ref }}
      run: |
        TEST_OUTPUT=$(cat test-output.log)
        PROMPT="Please analyze the following test output and provide a human-readable explanation of the errors along with suggested code changes. The relevant Python script is available here: https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/main/download_routes.py\n\nTest output:\n\n${TEST_OUTPUT}"
        RESPONSE=$(curl -s -X POST https://api.openai.com/v1/completions \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${OPENAI_API_KEY}" \
          -d '{
            "model": "text-davinci-003",
            "prompt": "'"${PROMPT}"'",
            "max_tokens": 1500
          }')

        RESPONSE_TEXT=$(echo "${RESPONSE}" | jq -r '.choices[0].text')
        echo "${RESPONSE_TEXT}" > openai_response.txt

        # Create a new branch for the PR
        BRANCH_NAME="test-failure-${GITHUB_SHA}"
        git checkout -b ${BRANCH_NAME}

        # Update download_routes.py with suggestions
        echo "${RESPONSE_TEXT}" >> download_routes.py

        # Commit the changes
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add download_routes.py openai_response.txt
        git commit -m "Test failure analysis and suggestions from OpenAI"

        # Push the new branch
        git push origin ${BRANCH_NAME}

        # Create a pull request to qa branch
        PR_TITLE="Test Failure Analysis: ${GITHUB_SHA}"
        PR_BODY="This pull request contains the analysis of the test failure along with code suggestions from OpenAI.\n\n${RESPONSE_TEXT}"
        gh pr create --title "${PR_TITLE}" --body "${PR_BODY}" --base qa --head ${BRANCH_NAME}

    - name: Create PR to QA branch
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/bugfix/') || startsWith(github.ref, 'refs/heads/request/') || startsWith(github.ref, 'refs/heads/support/')
      env:
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_REF: ${{ github.ref }}
      run: |
        BRANCH_NAME=$(echo ${GITHUB_REF} | sed 's/refs\/heads\///')
        PR_TITLE="Automatic PR from ${BRANCH_NAME}"
        PR_BODY="This is an automatic pull request from the ${BRANCH_NAME} branch."
        gh pr create --title "${PR_TITLE}" --body "${PR_BODY}" --base qa --head ${BRANCH_NAME}

    - name: Post message for incorrect branch naming
      if: github.event_name == 'push' && !startsWith(github.ref, 'refs/heads/feature/') && !startsWith(github.ref, 'refs/heads/bugfix/') && !startsWith(github.ref, 'refs/heads/request/') && !startsWith(github.ref, 'refs/heads/support/')
      run: |
        AUTHOR=$(git log -1 --pretty=format:'%an')
        MESSAGE="Hello ${AUTHOR}, your branch naming convention does not match our required format. Please follow the branch naming conventions specified in the CONTRIBUTING.md file."
        echo $MESSAGE
        # Post the message as a comment on the push
        # This requires an authenticated GitHub API request (this step is just illustrative)
        gh issue comment 1 --body "${MESSAGE}" # Adjust this command to post a comment appropriately
